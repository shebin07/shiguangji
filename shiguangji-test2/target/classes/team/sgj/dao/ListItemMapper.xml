<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.sgj.dao.ListItemMapper">
  <resultMap id="BaseResultMap" type="team.sgj.domain.ListItem">
    <id column="li_id" jdbcType="INTEGER" property="liId" />
    <result column="li_uid" jdbcType="INTEGER" property="liUid" />
    <result column="li_name" jdbcType="VARCHAR" property="liName" />
    <result column="li_finish" jdbcType="BIT" property="liFinish" />
    <result column="li_type" jdbcType="VARCHAR" property="liType" />
    <result column="li_info" jdbcType="VARCHAR" property="liInfo" />
    <result column="li_add_time" jdbcType="TIMESTAMP" property="liAddTime" />
    <result column="li_important" jdbcType="INTEGER" property="liImportant" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    li_id, li_uid, li_name, li_finish, li_type, li_info, li_add_time,li_important
  </sql>
  <select id="selectByExample" parameterType="team.sgj.domain.ListItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from listitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from listitem
    where li_id = #{liId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from listitem
    where li_uid = #{liUid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from listitem
    where li_id = #{liId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.sgj.domain.ListItemExample">
    delete from listitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.sgj.domain.ListItem">
    insert into listitem (li_id, li_uid, li_name, 
      li_finish, li_type, li_info, 
      li_add_time,li_important)
    values (#{liId,jdbcType=INTEGER}, #{liUid,jdbcType=INTEGER}, #{liName,jdbcType=VARCHAR}, 
      #{liFinish,jdbcType=BIT}, #{liType,jdbcType=VARCHAR}, #{liInfo,jdbcType=VARCHAR}, 
      #{liAddTime,jdbcType=TIMESTAMP},#{liImportant,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="team.sgj.domain.ListItem">
    insert into listitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="liId != null">
        li_id,
      </if>
      <if test="liUid != null">
        li_uid,
      </if>
      <if test="liName != null">
        li_name,
      </if>
      <if test="liFinish != null">
        li_finish,
      </if>
      <if test="liType != null">
        li_type,
      </if>
      <if test="liInfo != null">
        li_info,
      </if>
      <if test="liAddTime != null">
        li_add_time,
      </if>
      <if test="liImportant != null">
        li_important,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="liId != null">
        #{liId,jdbcType=INTEGER},
      </if>
      <if test="liUid != null">
        #{liUid,jdbcType=INTEGER},
      </if>
      <if test="liName != null">
        #{liName,jdbcType=VARCHAR},
      </if>
      <if test="liFinish != null">
        #{liFinish,jdbcType=BIT},
      </if>
      <if test="liType != null">
        #{liType,jdbcType=VARCHAR},
      </if>
      <if test="liInfo != null">
        #{liInfo,jdbcType=VARCHAR},
      </if>
      <if test="liAddTime != null">
        #{liAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="liImportant != null">
        #{liImportant,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.sgj.domain.ListItemExample" resultType="java.lang.Long">
    select count(*) from listitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update listitem
    <set>
      <if test="record.liId != null">
        li_id = #{record.liId,jdbcType=INTEGER},
      </if>
      <if test="record.liUid != null">
        li_uid = #{record.liUid,jdbcType=INTEGER},
      </if>
      <if test="record.liName != null">
        li_name = #{record.liName,jdbcType=VARCHAR},
      </if>
      <if test="record.liFinish != null">
        li_finish = #{record.liFinish,jdbcType=BIT},
      </if>
      <if test="record.liType != null">
        li_type = #{record.liType,jdbcType=VARCHAR},
      </if>
      <if test="record.liInfo != null">
        li_info = #{record.liInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.liAddTime != null">
        li_add_time = #{record.liAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.liImportant != null">
        li_important = #{record.liImportant,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update listitem
    set li_id = #{record.liId,jdbcType=INTEGER},
      li_uid = #{record.liUid,jdbcType=INTEGER},
      li_name = #{record.liName,jdbcType=VARCHAR},
      li_finish = #{record.liFinish,jdbcType=BIT},
      li_type = #{record.liType,jdbcType=VARCHAR},
      li_info = #{record.liInfo,jdbcType=VARCHAR},
      li_add_time = #{record.liAddTime,jdbcType=TIMESTAMP},
      li_important = #{record.liImportant,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.sgj.domain.ListItem">
    update listitem
    <set>
      <if test="liUid != null">
        li_uid = #{liUid,jdbcType=INTEGER},
      </if>
      <if test="liName != null">
        li_name = #{liName,jdbcType=VARCHAR},
      </if>
      <if test="liFinish != null">
        li_finish = #{liFinish,jdbcType=BIT},
      </if>
      <if test="liType != null">
        li_type = #{liType,jdbcType=VARCHAR},
      </if>
      <if test="liInfo != null">
        li_info = #{liInfo,jdbcType=VARCHAR},
      </if>
      <if test="liAddTime != null">
        li_add_time = #{liAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="liImportant != null">
        li_important = #{liImportant,jdbcType=INTEGER},
      </if>
    </set>
    where li_id = #{liId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.sgj.domain.ListItem">
    update listitem
    set li_uid = #{liUid,jdbcType=INTEGER},
      li_name = #{liName,jdbcType=VARCHAR},
      li_finish = #{liFinish,jdbcType=BIT},
      li_type = #{liType,jdbcType=VARCHAR},
      li_info = #{liInfo,jdbcType=VARCHAR},
      li_add_time = #{liAddTime,jdbcType=TIMESTAMP},
      li_important = #{liImportant,jdbcType=INTEGER}
    where li_id = #{liId,jdbcType=INTEGER}
  </update>
  <select id="selectExampleNumAll" parameterType="team.sgj.domain.ListItemExample" resultType="java.util.List">
    select count(*)
    from todolist.listitem
    where
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectExampleNumFinish" parameterType="team.sgj.domain.ListItemExample" resultType="java.util.List">
    select count(*)
    from todolist.listitem
    where li_finish is 'true'
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>